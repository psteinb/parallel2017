<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="generator" content="pandoc">
        <meta name="author" content="Peter Steinbach" />
            <meta name="dcterms.date" content="2017-03-30" />
        <title>ROCm with ROCr, right?</title>
    <meta name="description" content="ROCm with ROCr, right?">
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <!-- Bootstrap core CSS -->
    <link href="bootstrap/css/bootstrap.min.css" rel="stylesheet">
    
    <link rel="stylesheet" href="my_reveal.css"/>
        <link rel="stylesheet" href="reveal.js/css/theme/black.css" id="theme">
    
        <link rel="stylesheet" href="reveal.js/lib/css/zenburn.css">
    
    <!-- If the query includes 'print-pdf', include the PDF print sheet -->
    <script>
      if( window.location.search.match( /print-pdf/gi ) ) {
      var link = document.createElement( 'link' );
      link.rel = 'stylesheet';
      link.type = 'text/css';
      link.href = 'reveal.js/css/print/pdf.css';
      document.getElementsByTagName( 'head' )[0].appendChild( link );
      }
    </script>
    <!--[if lt IE 9]>
	<script src="reveal.js/lib/js/html5shiv.js"></script>
	<![endif]-->
          </head>
  <body>
        <div class="reveal">
      <div class="slides">

		<section>
	  <h1 class="title">ROCm with ROCr, right?</h1>
	  	  <p>
	    <b>Peter Steinbach</b><br>
	    <emph>(Scionics Computer Innovation GmbH)</emph><br>
	    <a href="mailto:steinbach@scionics.de">steinbach@scionics.de</a>
	    <br><br>
	  </p>
	  
	  <h3 class="date">March 30, 2017</h3>
	</section>
		
	<section><section id="before-i-start" class="titleslide slide level1"><h1>Before I start</h1></section><section id="scionics-who" class="slide level2">
<h1>Scionics Who?</h1>
<div class="row vertical-align">
<div class="col-xs-6">
<p><img src="img/scionics_main_logo.png" /><br />
<a href="scionics.de">Scionics Computer Innovation GmbH</a></p>
</div>
<div class="col-xs-6">
<ul>
<li>founded in 2000, Dresden (Germany)</li>
<li><p>service provider to the <a href="mpi-cbg.de">Max Planck Institute of Molecular Cell Biology and Genetics</a></p>
<ul>
<li>scientific computing facility</li>
<li>IT infrastructure</li>
<li>public relations</li>
</ul></li>
</ul>
</div>
</div>
</section><section id="why-parallel2017" class="slide level2">
<h1>Why parallel2017?</h1>
<div class="row">
<div class="col-xs-4">
<center>
Nvidia Tesla<br />
<img src="img/nvidia_tesla_p100_cropped_x400.png" />
</center>
</div>
<div class="col-xs-4">
<center>
AMD FirePro<br />
<img src="img/FirePro_S9300x2_x400.png" />
</center>
</div>
<div class="col-xs-4">
<center>
Intel MIC<br />
<img src="img/xeon_phi_x400.jpg" />
</center>
</div>
</div>
<center>
<p><strong>What should our clients choose?</strong></p>
</center>
</section><section id="why-i-present" class="slide level2">
<h1>Why I present?</h1>
<center>
<video width="1400" poster="video/Celegans_lateral_one_view_versus_deconvolved.png" controls loop>
<source src="video/Celegans_lateral_one_view_versus_deconvolved.webm" type='video/webm; codecs="vp8.0, vorbis"'>
<source src="video/Celegans_lateral_one_view_versus_deconvolved.mp4" type='video/mp4'>
<p>
Movie does not work! Sorry!
</p>
</video>
<p><em>Accelerating <a href="http://www.nature.com/nmeth/journal/v11/n6/full/nmeth.2929.html">our clients' scientific algorithms</a> on <a href="https://github.com/psteinb/gtc2015.git">GPUs</a><br />
(multi-GB dataset, a lot of FFTs)</em></p>
</center>
</section><section id="this-talk-advertisement" class="slide level2">
<h1>This Talk != Advertisement</h1>
<center>
<strong>AMD provided test hardware and that's it!</strong>
</center>
<ul>
<li><p>Our company is by no means financially tied to AMD nor any of it's resellers.</p></li>
<li><p>whatever I find missing or not working, I'll report it here (use the <a href="https://github.com/psteinb/parallel2017/issues">issue tracker</a> of this talk to correct me)</p></li>
</ul>
</section><section id="this-talk-is" class="slide level2">
<h1>This Talk is</h1>
<center>
<figure>
<img src="img/opensource-550x475.png" />
</figure>
<strong><a href="https://github.com/psteinb/parallel2017">github.com/psteinb/parallel2017</a></strong>
</center>
</section><section id="outline" class="slide level2">
<h1>Outline</h1>
<div style="font-size : 1.5em">
<center>
<ol type="1">
<li><p>ROCm</p></li>
<li><p>Porting Code from CUDA</p></li>
<li>HC</li>
</ol>
</center>
</div>
</section></section>
<section><section id="rocm" class="titleslide slide level1"><h1>ROCm</h1></section><section id="radeon-open-compute-platform" class="slide level2">
<h1>Radeon Open Compute Platform</h1>
<div class="row">
<div class="col-xs-4">
<p><a href="http://gpuopen.com/compute-product/rocm/"><img src="img/rocm_logo_x400.png" /></a></p>
</div>
<div class="col-xs-8">
</div>
<ul>
<li>very young:<br />
<em>April 25th, 2016</em>, version 1.0</li>
<li><p>3 main components:</p>
<ul>
<li><a href="http://gpuopen.com/compute-product/rocm/">ROCm</a> Linux kernel driver</li>
<li><a href="https://github.com/RadeonOpenCompute/ROCR-Runtime">ROCr</a> runtime &amp; library stack</li>
<li><a href="https://github.com/RadeonOpenCompute/hcc">HCC</a> compiler based on LLVM</li>
</ul></li>
</ul>
<center>
<strong>Open Source!</strong>
</center>
</div>
</section><section id="rocm-kernel-driver" class="slide level2">
<h1>ROCm kernel driver</h1>
<div class="row">
<div class="col-xs-4">
<p><a href="http://www.amd.com/en-us/innovations/software-technologies/gcn"><img src="img/amd-gcn-2.0-hawaii_x400.png" /></a></p>
</div>
<div class="col-xs-8">
</div>
<center>
<ul>
<li>large memory single allocation<br />
(&gt;32GB in one pointer)</li>
<li>peer-to-peer Multi-GPU</li>
<li>peer-to-peer with RDMA</li>
<li>systems management API and tooling</li>
</ul>
</center>
</div>
</section><section id="rocr-runtime" class="slide level2">
<h1>ROCr runtime</h1>
<div class="row-fluid">
<div class="col-xs-4">
<center>
<a href="http://www.hsafoundation.com/"><img src="img/hsa_logo_x400.jpg" /></a>
</center>
</div>
<div class="col-xs-8">
</div>
<ul>
<li>AMD's implementation of HSA runtime<br />
(+ extensions for multi-GPU)</li>
<li>user mode queues</li>
<li>flat memory addressing</li>
<li>atomic memory transactions &amp; signals</li>
<li>process concurrency &amp; preemption</li>
<li>device discovery</li>
</ul>
</div>
</section><section id="heterogenous-compute-compiler" class="slide level2">
<h1>Heterogenous Compute Compiler</h1>
<div class="row">
<div class="col-xs-4">
<center>
<a href="http://www.hsafoundation.com/"><img src="img/llvm-dragon_x400.png" /></a>
</center>
</div>
<div class="col-xs-8">
</div>
<ul>
<li><a href="https://github.com/RadeonOpenCompute/hcc">hcc</a> compiler for supported APIs</li>
<li>LLVM native GCN ISA code generation</li>
<li>offline compilation support</li>
<li>standardized loader and code object format</li>
<li>GCN ISA assembler and disassembler</li>
<li>HIP, HC and OpenCL programming interface</li>
</ul>
</div>
</section></section>
<section><section id="porting-code-from-cuda" class="titleslide slide level1"><h1>Porting Code from CUDA</h1></section><section id="prologue" class="slide level2">
<h1>Prologue</h1>
<center>
<figure>
<img src="img/github_gpu_stream.png" alt="UoB-HPC/GPU-STREAM" style="width:90.0%" /><figcaption><a href="https://github.com/UoB-HPC/GPU-STREAM">UoB-HPC/GPU-STREAM</a></figcaption>
</figure>
</center>
</section><section id="uob-hpcgpu-stream" class="slide level2">
<h1><a href="https://github.com/UoB-HPC/GPU-STREAM">UoB-HPC/GPU-STREAM</a></h1>
<pre><code>/* add   */ c[:]    = a[:]
/* mul   */ b[:]    = scalar*b[:]
/* copy  */ c[:]    = a[:] + b[:]
/* triad */ a[:]    = b[:] + scalar*c[:] 
/* dot   */ scalar  = dot(a[:],b[:])</code></pre>
<center>
<ul>
<li>benchmark of various programming paradigms:<br />
OpenMP3, OpenMP4, CUDA, Kokkos, Raja, OpenCL, ...</li>
<li>for now *nix only</li>
</ul>
</center>
</section><section id="hipify" class="slide level2">
<h1>Hipify</h1>
<div  class="row">
<div class="col-xs-4">
<center>
<figure>
<img src="fig/hipify-pipeline.svg" style="width:65.0%" />
</figure>
</center>
</div>
<div class="col-xs-8">
<ul>
<li>Convert CUDA to portable C++, <code>hipify</code></li>
<li>C++ kernel language ( C++11/14/17 features )</li>
<li>C runtime API</li>
<li>same performance as native CUDA</li>
</ul>
<div class="fragment">
<p>Â </p>
<ul>
<li><p>supports <em>most commonly</em> used parts of CUDA:<br />
streams, events, memory (de-)allocation, profiling</p></li>
<li>produced apps have full tool support:
<ul>
<li>CUDA: nvcc, nvprof, nvvp</li>
<li>ROCM: hcc, rocm-prof, codexl</li>
</ul></li>
</ul>
</div>
</div>
</div>
</section><section id="cuda-example" class="slide level2">
<h1><a href="https://github.com/UoB-HPC/GPU-STREAM/blob/master/CUDAStream.cu#L149">CUDA Example</a></h1>
<pre><code>__global__ void add_kernel(const T * a, 
                           const T * b, 
                           T * c){
  const int i = blockDim.x * blockIdx.x + threadIdx.x;
  c[i] = a[i] + b[i];}

void CUDAStream&lt;T&gt;::add(){
  add_kernel&lt;&lt;&lt;array_size/TBSIZE, TBSIZE&gt;&gt;&gt;(d_a, d_b, d_c);
  check_error();  //..
  }</code></pre>
</section><section id="hipified-example" class="slide level2">
<h1><a href="https://github.com/UoB-HPC/GPU-STREAM/blob/master/HIPStream.cpp#L152">Hip`ified Example</a></h1>
<pre><code>__global__ void add_kernel(hipLaunchParm lp, 
                           const T * a, 
                           const T * b, 
                           T * c){
  const int i = hipBlockDim_x * hipBlockIdx_x + hipThreadIdx_x;
  c[i] = a[i] + b[i];
}

void HIPStream&lt;T&gt;::add(){
  hipLaunchKernel(HIP_KERNEL_NAME(add_kernel), 
                  dim3(array_size/TBSIZE), dim3(TBSIZE), 0, 0, 
                  d_a, d_b, d_c);  check_error();  //...
}</code></pre>
</section><section id="hip-summary" class="slide level2">
<h1>HIP summary</h1>
<ul>
<li><p>very interesting tool to get started with production or legacy code</p></li>
<li><p>still low-level CUDA programming</p></li>
<li><p>HIP evosystem available as well: hipBlas, hipFFT, hipRNG, MIOpen (machine learning library)</p></li>
</ul>
</section></section>
<section><section id="heterogenous-compute" class="titleslide slide level1"><h1>Heterogenous Compute</h1></section><section id="hc" class="slide level2">
<h1>HC</h1>
<ul>
<li>C++ parallel runtime and API</li>
<li>superset of C++AMP</li>
<li>adds device specific instrinsics (wavefront shuffle, bit extraction, atomics)</li>
<li>compiled with <code>hcc</code></li>
<li>very similar to <a href="http://thrust.github.io/">thrust</a>, <a href="https://github.com/boostorg/com">boost.compute</a>, <a href="https://www.khronos.org/sycl">sycl</a></li>
<li>current C++17 STL implementatipn wraps around this</li>
</ul>
</section><section id="hc-api" class="slide level2">
<h1>HC API</h1>
<center>
<img src="fig/hc_api_nutshell.svg" style="width:80.0%" />
</center>
</section><section id="hc-in-gpu-stream-declaration" class="slide level2">
<h1>HC in <a href="https://github.com/UoB-HPC/GPU-STREAM">GPU-STREAM</a>, Declaration</h1>
<pre><code>#include &quot;Stream.h&quot;
#include &quot;hc.hpp&quot;

template &lt;class T&gt;
class HCStream : public Stream&lt;T&gt;
{
protected:
  // Size of arrays
  unsigned int array_size;
  // Device side pointers to arrays
  hc::array&lt;T,1&gt; d_a;
  hc::array&lt;T,1&gt; d_b;
  hc::array&lt;T,1&gt; d_c;</code></pre>
</section><section id="hc-in-gpu-stream-initialization" class="slide level2">
<h1>HC in <a href="https://github.com/UoB-HPC/GPU-STREAM">GPU-STREAM</a>, Initialization</h1>
<pre><code>template &lt;class T&gt;
void HCStream&lt;T&gt;::init_arrays(T _a, T _b, T _c)
{
    hc::array_view&lt;T,1&gt; view_a(this-&gt;d_a);
    hc::parallel_for_each(hc::extent&lt;1&gt;(array_size)
                                , [=](hc::index&lt;1&gt; i) [[hc]] {
                                  view_a[i] = _a;
                                });
    //...</code></pre>
</section><section id="hc-in-gpu-stream-run-kernel" class="slide level2">
<h1>HC in <a href="https://github.com/UoB-HPC/GPU-STREAM">GPU-STREAM</a>, Run Kernel</h1>
<pre><code>template &lt;class T&gt;
void HCStream&lt;T&gt;::add()
{
    hc::array_view&lt;T,1&gt; view_a(this-&gt;d_a);
    hc::array_view&lt;T,1&gt; view_b(this-&gt;d_b);
    hc::array_view&lt;T,1&gt; view_c(this-&gt;d_c);

    hc::parallel_for_each(hc::extent&lt;1&gt;(array_size)
                                , [=](hc::index&lt;1&gt; i) [[hc]] {
                                  view_c[i] = view_a[i]+view_b[i];
                                });</code></pre>
</section></section>
      </div>
    </div>


    <script src="reveal.js/lib/js/head.min.js"></script>
    <script src="reveal.js/js/reveal.js"></script>

    <script>

      // Full list of configuration options available here:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
      controls: false,
      progress: true,
      history: true,
      center: true,
      
      slideNumber: true,
      // The "normal" size of the presentation, aspect ratio will be preserved
      // when the presentation is scaled to fit different resolutions. Can be
      // specified using percentage units.
      width: 1920,
      height: 1080,

      // Factor of the display size that should remain empty around the content
      margin: 0.01,

      // Bounds for smallest/largest possible scale to apply to content
      minScale: 0.2,
      maxScale: 1.5,

      theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
      transition: 'slide', // default/cube/page/concave/zoom/linear/fade/none

      // Optional libraries used to extend on reveal.js
      dependencies: [
      { src: 'reveal.js/lib/js/classList.js', condition: function() { return !document.body.classList; } },
            { src: 'reveal.js/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
            { src: 'reveal.js/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
      { src: 'reveal.js/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } },
      //          { src: 'reveal.js/plugin/search/search.js', async: true, condition: function() { return !!document.body.classList; }, }
      //          { src: 'reveal.js/plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } }
      ]});
    </script>
      </body>
</html>
